const { v4: uuidv4 } = require("uuid");
const DB = require("./db/db.json");

const util = require("util");
const fs = require("fs");
const readFileAsync = util.promisify(fs.readFile);
const writeFileAsync = util.promisify(fs.writeFile);
const path = require("path");

const express = require("express");

const app = express();
app.use(express.static("public"));
app.use(express.urlencoded({ extended: true }));
app.use(express.json());

//any thing with this path "/notes" goes to the notes.html webpage
app.get("/notes", (req, res) => {
  res.sendFile(path.join(__dirname, "./public/notes.html"));
});
// everything else that isnt defined goes to the home page aka index.html
app.get("/", (req, res) => {
  res.sendFile(path.join(__dirname, "./public/index.html"));
});

app.get("/api/notes", (req, res) => {
  return readFileAsync("./db/db.json", "utf8", (err, data) => {
    let noteListItems = JSON.parse(data);
    // let note = [noteListItems];
    return res.json(noteListItems);
  });
});
app.post("/api/notes", (req, res) => {
  //reads the db.json info
  return readFileAsync("./db/db.json", "utf8", (err, data) => {
    if (err) {
      console.log(err);
    }
    let noteListItems = [];
    // request the title and text from db.json
    let title = req.body.title;
    let text = req.body.text;

    const activeNote = [{ title, text, id: uuidv4() }];
    // pushes title and text and a random id into notelistItems and then writes it in the db.json file
    noteListItems.push(activeNote);
    writeFileAsync("./db/db.json", JSON.stringify(noteListItems));
    noteListItems = JSON.parse(data);
    //returns the data in json fromate
    return res.json(noteListItems);
  });
});

app.delete("/api/notes/:id", (req, res) => {
  return readFileAsync("./db/db.json", "utf8", (err, data) => {
    if (err) throw err;
    let activeNote = JSON.parse(data);
    console.log(req.params.id);
    //getting the id generated by uuidv
    activeNote
      .map((item) => {
        return item.id;
      })
      //route parameter specified in the path
      .indexOf(req.params.id);
    console.log(item.id);

    activeNote.splice(item.id, 1);
    return writeFileAsync("./db/db.json", JSON.stringify(activeNote), (err) => {
      if (err) throw err;
    });
  });
});

const port = process.env.PORT || 7000;

app.listen(port, () => {
  console.log(`listenig on port ${port}`);
});

// app.get("api/notes", (req, res) => {
//   res.json(db);
// });
// // app.post("api/notes/", (req, res) => {
// //   const { title, text } = res.body;
// //   const newNote = { title, text };
// //   db.push(newNote);
// //   writeFileAsync("db/db.json", JSON.stringify(newNote));
// //   res.json(db);
// // });
